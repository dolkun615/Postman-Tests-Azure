{
	"info": {
		"_postman_id": "7245ce43-1f90-43f2-b2a1-bdf29c78e1e9",
		"name": "DemoApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Completed",
			"item": [
				{
					"name": "ESB - Created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure ESB Created Event is Successful\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(201);   \r",
									"    //console.log(responseBody);\r",
									"    pm.expect(responseBody).to.exist;\r",
									"    pm.environment.set(\"esbTransferOrderId\", responseBody);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let randomStockNumber = _.random(100, 10000);\r",
									"console.log(`randomStockNumber: ${randomStockNumber}`);\r",
									"pm.environment.set(\"randomStockNumber\", randomStockNumber);\r",
									"\r",
									"let vehicleLocationId = _.random(100, 1000);\r",
									"console.log(`vehicleLocationId: ${vehicleLocationId}`);\r",
									"pm.environment.set(\"vehicleLocationId\", vehicleLocationId);\r",
									"\r",
									"let randomPhoneNumber = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
									"let randomPhone = new RegExp(\"-\", \"g\");\r",
									"randomPhoneNumber = randomPhoneNumber.replace(randomPhone, \"\");\r",
									"pm.environment.set(\"randomPhoneNumber\", randomPhoneNumber);\r",
									"console.log(randomPhoneNumber);\r",
									"\r",
									"let destinationLocationId = _.random(100, 1000);\r",
									"console.log(`destinationLocationId: ${destinationLocationId}`);\r",
									"pm.environment.set(\"destinationLocationId\", destinationLocationId);\r",
									"\r",
									"let cmxdbTransferOrderNumber = _.random(100, 10000);\r",
									"console.log(`cmxdbTransferOrderNumber: ${cmxdbTransferOrderNumber}`);\r",
									"pm.environment.set(\"cmxdbTransferOrderNumber\", cmxdbTransferOrderNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TransactionID\": \"{{$guid}}\",\r\n    \"Result\": [\r\n        {\r\n            \"requesting_loc_num\": {{destinationLocationId}}, // DestinationLocationId\r\n            \"transfer_order_num\": {{cmxdbTransferOrderNumber}}, // CmxdbTransferOrderNumber\r\n            \"owning_loc_num\": {{vehicleLocationId}}, // SourceLocationId\r\n            \"stock_num_out\": {{randomStockNumber}}, // StockNumber\r\n            \"transfer_fee\": 150.00,\r\n            \"first_name\": \"{{$randomFirstName}}\",\r\n            \"last_name\": \"{{$randomLastName}}\",\r\n            \"email\": \"{{$randomEmail}}\",\r\n            \"phone_num\": \"{{randomPhoneNumber}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{customer-transfer-service-url}}/esb-events/created",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"esb-events",
								"created"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get TransferOrder Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure Transfer Data is Retrieved With esbTransferOrderId\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response.cmxdbTransferOrderNumber).to.exist;\r",
									"    pm.expect(response.destinationLocationId.toString());\r",
									"    pm.expect(response.transferStatus).to.equal(\"transfer-order-awaiting-approval\");\r",
									"    pm.expect(response.isActive).to.equal(true);\r",
									"    pm.expect(response.denialDetails).to.equal(null);\r",
									"    pm.expect(response.logisticDetails).to.equal(null);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{customer-transfer-service-url}}/api/transfer-orders/{{esbTransferOrderId}}",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"api",
								"transfer-orders",
								"{{esbTransferOrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ESB - Approved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure ESB Approved Event is Successful\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);    \r",
									"    // Add tests\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TransactionID\": \"{{$guid}}\",\r\n    \"Result\": [\r\n        {\r\n            \"loc_num_out\": \"{{destinationLocationId}}\",\r\n            \"order_num_out\": \"{{cmxdbTransferOrderNumber}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{customer-transfer-service-url}}/esb-events/approved",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"esb-events",
								"approved"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ensure TransferOrder Approved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure TransferOrder Approved\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response.count).to.equal(1);\r",
									"    let transferOrder = response.items[0];\r",
									"    pm.expect(transferOrder.transferOrderId).to.equal(pm.environment.get(\"esbTransferOrderId\"));\r",
									"    pm.expect(transferOrder.transferStatus).to.equal(\"transfer-order-approved\");\r",
									"    pm.expect(transferOrder.isActive).to.equal(true);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{customer-transfer-service-url}}/api/transfer-orders?destinationStoreId={{destinationLocationId}}&cmxdbTransferOrderNumber={{cmxdbTransferOrderNumber}}",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"api",
								"transfer-orders"
							],
							"query": [
								{
									"key": "destinationStoreId",
									"value": "{{destinationLocationId}}"
								},
								{
									"key": "cmxdbTransferOrderNumber",
									"value": "{{cmxdbTransferOrderNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ESB - Tendered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure ESB Tendered Post Request is Successful\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TransactionID\": \"{{$guid}}\",\r\n    \"Result\": [\r\n        {\r\n            \"loc_num_out\": {{destinationLocationId}},\r\n            \"order_num_out\": \"{{cmxdbTransferOrderNumber}}\"\r\n\r\n            // \"transfer_checkout_id\": null,\r\n            // \"sendinglocation\": \"{{vehicleLocation}}\",\r\n            // \"cust_id_out\": -21817751,\r\n            // \"cust_type\": \"A\",\r\n            // \"stock_num_out\": \"{{stockNumber}}\"\r\n            // \"record_type\": \"dolore id\",\r\n            // \"order_status\": \"Lorem quis incididunt mollit commodo\",\r\n            // \"first_name\": \"sit reprehende\",\r\n            // \"last_name\": \"sed quis enim veniam\",\r\n            // \"email\": \"ad reprehenderit fugiat\",\r\n            // \"phone_num\": \"in ex quis pariatur\",\r\n            // \"customer_contact_id_out\": 75270972,\r\n            // \"emp_id_out\": 85077578,\r\n            // \"create_date_out\": \"1961-02-08T00:17:15.011Z\",\r\n            // \"store_event_type_id\": -74491404,\r\n            // \"order_type_desc\": \"elit labore dolor proident\",\r\n            // \"order_type_id\": -31203138,\r\n            // \"estimated_arrival\": \"non officia\",\r\n            // \"transfer_fee\": 0,\r\n            // \"return_code\": -83845496,\r\n            // \"response_msg\": \"reprehenderit ea Lor\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{customer-transfer-service-url}}/esb-events/tendered",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"esb-events",
								"tendered"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ensure TransferOrder Tendered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure TransferOrder Tendered\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response.count).to.equal(1);\r",
									"    let transferOrder = response.items[0];\r",
									"    pm.expect(transferOrder.transferOrderId).to.equal(pm.environment.get(\"esbTransferOrderId\"));\r",
									"    pm.expect(transferOrder.transferStatus).to.equal(\"transfer-order-tendered\");\r",
									"    pm.expect(transferOrder.isActive).to.equal(true);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{customer-transfer-service-url}}/api/transfer-orders?destinationStoreId={{destinationLocationId}}&cmxdbTransferOrderNumber={{cmxdbTransferOrderNumber}}",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"api",
								"transfer-orders"
							],
							"query": [
								{
									"key": "destinationStoreId",
									"value": "{{destinationLocationId}}"
								},
								{
									"key": "cmxdbTransferOrderNumber",
									"value": "{{cmxdbTransferOrderNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ESB - Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure ESB Completed Post Request is Successful\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    setTimeout(() => {}, pm.environment.get(\"defaultTimeout\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"TransactionID\": \"{{$guid}}\",\r\n    \"Result\": [\r\n        {\r\n            \"cust_loc_num\": {{destinationLocationId}},\r\n            \"transfer_order_num\": {{cmxdbTransferOrderNumber}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{customer-transfer-service-url}}/esb-events/completed",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"esb-events",
								"completed"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ensure TransferOrder Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ensure TransferOrder Completed\", () => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response.count).to.equal(1);\r",
									"    let transferOrder = response.items[0];\r",
									"    pm.expect(transferOrder.transferOrderId).to.equal(pm.environment.get(\"esbTransferOrderId\"));\r",
									"    pm.expect(transferOrder.transferStatus).to.equal(\"transfer-order-completed\");\r",
									"    pm.expect(transferOrder.isActive).to.equal(false);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{customer-transfer-service-url}}/api/transfer-orders?destinationStoreId={{destinationLocationId}}&cmxdbTransferOrderNumber={{cmxdbTransferOrderNumber}}",
							"host": [
								"{{customer-transfer-service-url}}"
							],
							"path": [
								"api",
								"transfer-orders"
							],
							"query": [
								{
									"key": "destinationStoreId",
									"value": "{{destinationLocationId}}"
								},
								{
									"key": "cmxdbTransferOrderNumber",
									"value": "{{cmxdbTransferOrderNumber}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}